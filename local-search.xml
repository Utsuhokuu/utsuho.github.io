<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>记录一下看过的动画</title>
    <link href="/2022/04/20/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E7%9C%8B%E8%BF%87%E7%9A%84%E5%8A%A8%E7%94%BB/"/>
    <url>/2022/04/20/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E7%9C%8B%E8%BF%87%E7%9A%84%E5%8A%A8%E7%94%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="记录一下看过的动画"><a href="#记录一下看过的动画" class="headerlink" title="记录一下看过的动画"></a>记录一下看过的动画</h1><p><em>以前用过Bangumi、豆瓣等记录网站，但是果然还是觉得可操作性不强，现在想在这里对看过的动画做一个个人一点的记录。</em></p><p>我入坑成为一名动画宅始于我的五年级（2011年），记得我的入宅作是<strong>迷茫管家与懦弱的我</strong>,年少的我被优酷相关推荐封面的<del>奶子</del>吸引点了进去，殊不知这竟会成为我人生中的一个重大转折点。动画对我而言已经不只是一个娱乐方式，而是已经成为我生活的一部分了。</p><p>我对动画的审美发生过多次改变，刚入坑的时候，我偏爱后宫喜剧，代表作为<strong>出包王女</strong>。后来我在初二（2014年）的时候接触漫威、DC超级英雄电影和电视剧，在动画方面就暂时退坑；在高中的时候，由于B站的慢慢兴起，二次元文化开始被更多人熟知。而我在机缘巧合之下刷到一个动画评分视频，对排行榜上前列的动画产生了好奇心，于是便去看了当时排名第5的<strong>命运石之门</strong>，并为之陷入狂热，受其影响大学填报志愿的时候我想都没想就报了物理学专业。那段时间，我偏爱剧情向动画。在读大学之后，我的阅片量显著上升，也因此我的审美偏好变得杂了很多。现在，我偏好制作精良的日常类动画，代表作为<strong>吹响！悠风号</strong>。</p><p>我对动画有一套个人的评价体系，对我来说，动画的制作，准确来说是“讲故事的能力”，是与故事本身同等重要的要素。有趣的故事是不限国度和地区的，但是真正让日本动画独一无二的，是日本动画公司出众的动画制作技术以及故事编排能力。在我的评价体系中，动画的每一个部分都重要，因为一部好的动画不应该在某一方面有明显的短板；动画的部分又不是特别重要，因为优秀的动画，最重要的是整体，是灵魂，是爱。</p><p>下面按我看的时间列举我看过的动画，◆表示我的个人比较喜欢的动画，不记录OVA、OAD、宣传片以及总集篇剧场版。</p><h2 id="正在看"><a href="#正在看" class="headerlink" title="正在看"></a>正在看</h2><p>辉夜大小姐想让我告白-超级浪漫-</p><p>夏日重现</p><p>间谍过家家</p><p>蜂蜜与四叶草</p><p>摇曳露营△ 第二季</p><p>派对浪客诸葛孔明</p><p>相合之物</p><p>Love Live! 虹咲学园校园偶像同好会 第二季</p><h2 id="2022"><a href="#2022" class="headerlink" title="2022"></a>2022</h2><p>◆无职转生 ～在异世界认真地活下去～</p><p>◆英雄联盟：双城之战</p><p>剧场版 少女☆歌剧 Revue Starlight</p><h2 id="2021"><a href="#2021" class="headerlink" title="2021"></a>2021</h2><p>◆乔西的虎与鱼</p><p>◆赛马娘 Pretty Derby 第二季</p><p>◆新・福音战士剧场版：终</p><p>◆攻壳机动队</p><p>◆哆啦A梦 大雄的新恐龙</p><p>FLCL</p><p>平家物语</p><p>佐贺偶像是传奇 复仇</p><p>狂赌之渊</p><p>异世界迷宫黑心企业</p><p>小林家的龙女仆S</p><p>关于我转生变成史莱姆这档事 第二季</p><p>打了三百年的史莱姆，不知不觉就练到了满等</p><p>剧场版 温泉屋的小老板娘</p><h2 id="2020"><a href="#2020" class="headerlink" title="2020"></a>2020</h2><p>◆剧场版 吹响！悠风号～誓言的终章～</p><p>◆白箱</p><p>◆朝花夕誓——于离别之朝束起约定之花</p><p>◆声之形</p><p>◆辉夜大小姐想让我告白？～天才们的恋爱头脑战～</p><p>◆来自深渊 深邃的魂之黎明</p><p>◆钢之炼金术师 FULLMETAL ALCHEMIST</p><p>◆小林家的龙女仆</p><p>◆异种族风俗娘评鉴指南</p><p>◆Love Live! 虹咲学园校园偶像同好会</p><p>轻音少女</p><p>命运石之门 0</p><p>剧场版 青春笨蛋少年不做怀梦美少女的梦</p><p>我想吃掉你的胰脏</p><p>记录的地平线 第二季</p><p>记录的地平线</p><p>小魔女学园 魔法游行</p><p>阿基拉</p><p>心灵奇旅</p><p>恶玉DRIVE</p><p>魔女之旅</p><p>BNA</p><p>昨日之歌</p><p>转生成为了只有乙女游戏破灭Flag的邪恶大小姐</p><p>破晓之翼</p><p>因为太怕痛就全点防御力了。</p><p>别对映像研出手！</p><p>ID:INVADED</p><p>你好 世界</p><p>若能与你共乘海浪之上</p><p>巴比伦</p><p>崖上的波妞</p><p>GOSICK</p><p>女高中生的无所事事</p><p>约定的梦幻岛</p><h2 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h2><p>◆吹响！悠风号 第二季</p><p>◆吹响！悠风号</p><p>◆星之声</p><p>◆千与千寻</p><p>◆春宵苦短，少女前进吧！</p><p>◆辉夜大小姐想让我告白～天才们的恋爱头脑战～</p><p>◆NO GAME NO LIFE 游戏人生 ZERO</p><p>哈尔的移动城堡</p><p>魔法少女奈叶</p><p>莉兹与青鸟</p><p>Fate/Grand Order -绝对魔兽战线巴比伦尼亚-</p><p>慎重勇者 ～这个勇者明明超强却过分慎重～</p><p>烟花</p><p>剧场版 紫罗兰永恒花园 外传 - 永远与自动手记人偶 -</p><p>天气之子</p><p>命运石之门 0</p><p>剧场版 名侦探柯南 绀青之拳</p><p>CAROLE &amp; TUESDAY</p><p>一拳超人 第二季</p><p>爱、死亡 &amp; 机器人</p><p>剧场版 Fate/stay night [Heaven’s Feel] II.lost butterfly</p><p>烟草</p><p>剧场版 刀剑神域 序列之争</p><p>穿越时空的少女</p><h2 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h2><p>◆比宇宙更远的地方</p><p>◆剧场版 魔法少女小圆 [新篇] 叛逆的物语</p><p>◆凉宫春日的消失</p><p>◆蓝色恐惧</p><p>◆少女☆歌剧 Revue Starlight</p><p>◆摇曳露营△</p><p>◆水星领航员</p><p>◆小魔女学园</p><p>◆幽灵公主</p><p>◆风之谷</p><p>◆永生之酒</p><p>◆天空之城</p><p>◆夏日大作战</p><p>◆红猪</p><p>◆来自深渊</p><p>◆佐贺偶像是传奇</p><p>◆寻梦环游记</p><p>Fate/Zero</p><p>红辣椒</p><p>龙猫</p><p>凉宫春日的忧郁 2009</p><p>兽娘动物园</p><p>剧场版 Fate/stay night [Heaven’s Feel] I.presage flower</p><p>为美好的世界献上祝福！ 第二季</p><p>为美好的世界献上祝福！</p><p>我的英雄学院 第二季</p><p>我的英雄学院</p><p>NO GAME NO LIFE 游戏人生</p><p>甘城光辉游乐园</p><p>起风了</p><p>武士弗拉明戈</p><p>Fate/Grand Order -First Order-</p><p>青春笨蛋少年不做兔女郎学姐的梦</p><p>关于我转生变成史莱姆这档事</p><p>SSSS.古立特</p><p>OVERLORD III</p><p>邪神与厨二病少女</p><p>工作细胞</p><p>后街女孩</p><p>轻羽飞扬</p><p>刺客伍六七</p><p>名侦探柯南 零的执行人</p><p>DARLING in the FRANXX</p><p>爆肝工程师的异世界狂想曲</p><p>紫罗兰永恒花园</p><p>OVERLORD II</p><p>龙王的工作</p><p>pop子和pipi美的日常</p><h2 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h2><p>◆CLANNAD ～AFTER STORY～</p><p>◆CLANNAD</p><p>◆命运石之门</p><p>◆冰菓</p><p>◆天元突破 红莲螺岩</p><p>◆寒蝉鸣泣之时 解</p><p>◆寒蝉鸣泣之时</p><p>◆一拳超人</p><p>斩服少女</p><p>情色漫画老师</p><p>夏洛特</p><p>落第骑士英雄谭</p><p>一人之下 第二季</p><p>调教咖啡厅</p><p>OVERLORD</p><p>欢迎来到实力至上主义教室</p><p>恋爱暴君</p><p>政宗君的复仇</p><p>Re:CREATORS</p><p>名侦探柯南 殷红的恋歌</p><p>一人之下</p><p>剧场版 命运石之门 负荷领域的既视感</p><h2 id="2016"><a href="#2016" class="headerlink" title="2016"></a>2016</h2><p>◆你的名字。</p><p>◆魔法少女小圆</p><p>◆言叶之庭</p><p>◆秒速5厘米</p><p>◆龙与虎</p><p>◆Fate/stay night [Unlimited Blade Works]</p><p>Angel Beats! 地狱厨房</p><p>Angel Beats!</p><p>疯狂动物城</p><p>我们仍未知道那天所看见的花的名字。</p><p>星之梦</p><p>Re：从零开始的异世界生活</p><p>零之使魔F</p><p>零之使魔 三美姬的轮舞</p><p>零之使魔 双月骑士</p><p>零之使魔</p><p>最终幻想15 王者之剑</p><p>剧场版 名侦探柯南 纯黑的恶梦</p><p>精灵宝可梦 太阳&amp;月亮</p><p>剧场版 哆啦A梦 新·大雄的日本诞生</p><p>Rewrite</p><p>可塑性记忆</p><h2 id="2015"><a href="#2015" class="headerlink" title="2015"></a>2015</h2><p>◆南方公园</p><p>剧场版 名侦探柯南 业火的向日葵</p><p>精灵宝可梦XY&amp;Z</p><p>剧场版 精灵宝可梦 光环的超魔神 胡帕</p><p>缘之空</p><h2 id="2014"><a href="#2014" class="headerlink" title="2014"></a>2014</h2><p>◆蜡笔小新 呼风唤雨！大人帝国的反击</p><p>◆哆啦A梦：伴我同行</p><p>超能陆战队</p><p>剧场版 哆啦A梦 新·大雄的大魔境-贝可与5人探险队-</p><p>剧场版 天降之物Final 永远的我的鸟笼</p><p>蜡笔小新</p><p>剧场版 蜡笔小新 呼风唤雨！战国大合战</p><p>剧场版 精灵宝可梦XY-破坏之茧与蒂安希</p><p>魔术快斗1412</p><p>魔术快斗</p><h2 id="2013"><a href="#2013" class="headerlink" title="2013"></a>2013</h2><p>◆我的妹妹哪有这么可爱。</p><p>精灵宝可梦XY</p><p>约会大作战</p><p>剧场版 名侦探柯南 绝海的侦探</p><p>剧场版 精灵宝可梦超级愿望—最终章—：神速的盖诺赛克特 超梦觉醒</p><p>剧场版 精灵宝可梦DP：阿尔宙斯 超克的时空</p><p>剧场版 Keroro军曹 龙勇士的逆袭</p><p>剧场版 Keroro军曹3 Keroro 对 Keroro 天空大决战</p><p>剧场版 Keroro军曹2 深海的公主</p><p>剧场版 Keroro军曹</p><p>变态王子与不笑猫。</p><p>剧场版 快要坏掉的八音盒</p><p>剧场版 哆啦A梦 大雄的秘密道具博物館</p><p>怪兽大学</p><p>旋风管家 Cuties</p><p>亲吻姐姐</p><p>我的朋友很少NEXT</p><h2 id="2012"><a href="#2012" class="headerlink" title="2012"></a>2012</h2><p>◆新世纪福音战士剧场版 Air/真心为你</p><p>◆新世纪福音战士</p><p>◆福音战士新剧场版：破</p><p>◆出包王女Darkness</p><p>◆樱花庄的宠物女孩</p><p>◆出包王女</p><p>◆剧场版 精灵宝可梦DP：骑拉帝纳与冰空的花束 洁咪</p><p>◆剧场版 精灵宝可梦DP：帝牙卢卡VS帕路奇犽VS达克莱伊</p><p>◆更多 出包王女</p><p>福音战士新剧场版：Q</p><p>福音战士新剧场版：序</p><p>中二病也要谈恋爱！</p><p>剧场版 精灵宝可梦超级愿望：酋雷姆VS圣剑士 凯路迪欧</p><p>剧场版 精灵宝可梦超级愿望：比克提尼与黑英雄 捷克罗姆</p><p>剧场版 哆啦A梦 大雄与奇迹之岛～动物历险记～</p><p>剧场版 名侦探柯南 第11位前锋</p><p>三人行必有我妹</p><p>美少女死神 还我H之魂</p><p>加速世界</p><p>旋风管家 CAN’T TAKE MY EYES OFF YOU</p><p>这个是僵尸吗？OF THE DEAD</p><h2 id="2011"><a href="#2011" class="headerlink" title="2011"></a>2011</h2><p>◆旋风管家 第二季</p><p>◆旋风管家</p><p>◆花开伊吕波</p><p>◆我的妹妹哪有这么可爱！</p><p>我的朋友很少</p><p>天降之物 计时的悲伤女神</p><p>天降之物f</p><p>天降之物</p><p>旋风管家 HEAVEN IS A PLACE ON EARTH</p><p>这个是僵尸吗？</p><p>罪恶王冠</p><p>黑岩射手</p><p>快要坏掉的八音盒</p><p>剧场版 名侦探柯南 沉默的15分钟</p><p>剧场版 我们这一家 -热情的超能力- 母亲大暴走！</p><p>吸血鬼骑士 Guilty</p><p>吸血鬼骑士</p><p>迷茫管家与懦弱的我</p><h2 id="小时候断断续续看的"><a href="#小时候断断续续看的" class="headerlink" title="小时候断断续续看的"></a>小时候断断续续看的</h2><p>魔女宅急便</p><p>剧场版 哆啦A梦 大雄的新魔界大冒险之7个魔法师</p><p>剧场版 哆啦A梦 大雄的恐龙 2006</p><p>剧场版 哆啦A梦 大雄与绿巨人传</p><p>剧场版 哆啦A梦 大雄与铁人兵团</p><p>KERORO军曹</p><p>精灵宝可梦 钻石&amp;珍珠</p><p>精灵宝可梦 超世代</p><p>精灵宝可梦 超级愿望</p><p>剧场版 哆啦A梦 新‧大雄的宇宙开拓史</p><p>剧场版 精灵宝可梦超世代 裂空的访问者 代欧奇希斯</p><p>剧场版 精灵宝可梦超世代 七夜的许愿星 基拉祈</p><p>剧场版 名侦探柯南 战栗的乐谱</p><p>剧场版 名侦探柯南 鲁邦三世VS名侦探柯南</p><p>剧场版 哆啦A梦 大雄的宇宙开拓史</p><p>剧场版 哆啦A梦 大雄和发条都市</p><p>数码宝贝大冒险</p><p>猫和老鼠</p><p>快乐星猫</p><p>游戏王－怪兽之决斗</p><p>玩具总动员2</p><p>玩具总动员</p><p>僵尸新娘</p><p>魔神英雄传</p><p>龙珠</p><p>名侦探柯南</p><p>欢乐树伙伴</p><p>剧场版 哆啦A梦 大雄的宇宙小战争</p><p>剧场版 哆啦A梦 大雄与龙之骑士</p><p>剧场版 哆啦A梦 大雄的大魔境</p><p>剧场版 哆啦A梦 大雄的恐龙</p><p>剧场版 哆啦A梦 大雄的魔界大冒险</p><p>剧场版 哆啦A梦 大雄的天方夜谭</p><p>剧场版 哆啦A梦 大雄的太阳王传说</p><p>剧场版 哆啦A梦 大雄与翼之勇者</p><p>剧场版 大雄与机器人王国</p><p>我们这一家</p><p>剧场版 名侦探柯南 天空的遇难船</p><p>萤火虫之墓</p><p>剧场版 大雄与动物行星</p><p>剧场版 哆啦A梦 大雄的宇宙漂流记</p><p>剧场版 大雄的南海大冒险</p><p>剧场版 大雄与白金迷宫</p><p>剧场版 哆啦A梦 大雄的创世日记</p><p>剧场版 哆啦A梦 大雄与风之使者</p><p>剧场版 哆啦A梦 大雄的日本诞生</p><p>剧场版 哆啦A梦 大雄的猫狗时空传</p><p>剧场版 哆啦A梦 大雄与云之王国</p><p>剧场版 哆啦A梦 大雄与梦幻三剑士</p><p>果宝特攻</p><p>剧场版 哆啦A梦 大雄的人鱼大海战</p><p>哆啦A梦</p>]]></content>
    
    
    <categories>
      
      <category>生活记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动画</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>刷题记录1: PAT 1003 我要通过！</title>
    <link href="/2021/05/29/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-PAT-1003-%E6%88%91%E8%A6%81%E9%80%9A%E8%BF%87%EF%BC%81/"/>
    <url>/2021/05/29/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-PAT-1003-%E6%88%91%E8%A6%81%E9%80%9A%E8%BF%87%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<h1 id="刷题记录1-PAT-1003-我要通过！"><a href="#刷题记录1-PAT-1003-我要通过！" class="headerlink" title="刷题记录1: PAT 1003 我要通过！"></a>刷题记录1: PAT 1003 我要通过！</h1><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>想了一下还是觉得可以写(shui)一些刷题的博客，来记录在我学习编程过程中遇到过值得记录的题目。最近在刷PAT，那么刷题记录就从这题开始吧。</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>“<strong>答案正确</strong>”是自动判题系统给出的最令人欢喜的回复。本题属于 PAT 的“<strong>答案正确</strong>”大派送 —— 只要读入的字符串满足下列条件，系统就输出“<strong>答案正确</strong>”，否则输出“<strong>答案错误</strong>”。</p><p>得到“<strong>答案正确</strong>”的条件是：</p><ol><li>字符串中必须仅有 <code>P</code>、 <code>A</code>、 <code>T</code>这三种字符，不可以包含其它字符；</li><li>任意形如 <code>xPATx</code> 的字符串都可以获得“<strong>答案正确</strong>”，其中 <code>x</code> 或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串；</li><li>如果 <code>aPbTc</code> 是正确的，那么 <code>aPbATca</code> 也是正确的，其中 <code>a</code>、 <code>b</code>、 <code>c</code> 均或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串。</li></ol><p>现在就请你为 PAT 写一个自动裁判程序，判定哪些字符串是可以获得“<strong>答案正确</strong>”的。</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>每个测试输入包含 1 个测试用例。第 1 行给出一个正整数 <em>n</em> (&lt;10)，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过 100，且不包含空格。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>每个字符串的检测结果占一行，如果该字符串可以获得“<strong>答案正确</strong>”，则输出 <code>YES</code>，否则输出 <code>NO</code>。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs in">9<br>PAT<br>PAAT<br>AAPATAA<br>AAPAATAAAA<br>xPATx<br>PT<br>Whatever<br>APAAATAA<br>APT<br></code></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs out">YES<br>YES<br>YES<br>YES<br>NO<br>NO<br>NO<br>NO<br>NO<br></code></pre></td></tr></table></figure><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><ul><li><p>条件一：输入的字母串中必须含有<code>&#39;P&#39;,&#39;A&#39;,&#39;T&#39;</code>三个字符，而不能拥有其它字符。那么很简单，在C++11下我们可以用for(auto)来获取字符串中每一个字符，并且判断字符是否为<code>&#39;P&#39;,&#39;A&#39;,&#39;T&#39;</code>中的其一即可。</p></li><li><p>条件二：形如<code>xPATx</code>的字符串都可以通过，意思就是在满足条件一而且PAT前后所含A的数量相同的情况可以通过。</p></li><li><p>条件三：（这个条件比较难懂，我刚开始也研究了很久…）如果 <code>aPbTc</code> 是正确的，那么 <code>aPbATca</code> 也是正确。那么也就是说，如果<code>aPbTc</code>能通过的话那么说明其满足条件二，于是可以得出<code>b=A,a=c</code>。由条件三可得出<code>aPAATaa</code>也能通过，总结一下就是形如<code>xPAATxx</code>的字符串都可以通过。</p><p>综合考虑条件二、三，我们会发现其实能通过的字符串均满足公式：</p><p>[P左边A的数目]*[PT中间A的数目]=[T右边A的数目]</p><p>再综合考虑条件一、二、三，我们可以知道P和T的数目都有且仅有一个，并且T需要在P之后出现。</p><p>这就是我们希望得出的规律。</p></li></ul><h2 id="参考代码-C"><a href="#参考代码-C" class="headerlink" title="参考代码(C++)"></a>参考代码(C++)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">函数设计思路：函数pass-by-reference并返回int型变量，当返回1时代表通过，返回0时代表不通过。</span><br><span class="hljs-comment">*/</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">PATjudgment</span><span class="hljs-params">(<span class="hljs-keyword">const</span> string&amp; ctr)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> count_P = <span class="hljs-number">0</span>, count_A = <span class="hljs-number">0</span>, count_T = <span class="hljs-number">0</span>; <span class="hljs-comment">// P A T的数目</span><br>    <span class="hljs-keyword">int</span> count_LA = <span class="hljs-number">0</span>, count_MA = <span class="hljs-number">0</span>, count_RA = <span class="hljs-number">0</span>; <span class="hljs-comment">// 左中右A的数目</span><br>    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> i: ctr) &#123; <span class="hljs-comment">// C++11特性：for range循环，在循环内进行计数</span><br>        <span class="hljs-keyword">if</span>(i != <span class="hljs-string">&#x27;P&#x27;</span> &amp;&amp; i != <span class="hljs-string">&#x27;A&#x27;</span> &amp;&amp; i != <span class="hljs-string">&#x27;T&#x27;</span>) <span class="hljs-comment">// 条件一的判断</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i == <span class="hljs-string">&#x27;P&#x27;</span>)<br>            ++count_P;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i == <span class="hljs-string">&#x27;T&#x27;</span>)<br>            ++count_T;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i == <span class="hljs-string">&#x27;A&#x27;</span>)<br>            ++count_A;<br>        <br>        <span class="hljs-keyword">if</span>(count_P &gt; <span class="hljs-number">1</span> || count_T &gt; <span class="hljs-number">1</span>) <span class="hljs-comment">// 条件一、二、三的综合判断</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">if</span>(count_P == <span class="hljs-number">0</span> &amp;&amp; i == <span class="hljs-string">&#x27;A&#x27;</span>)<br>            ++count_LA;<br>        <span class="hljs-keyword">if</span>(count_P == <span class="hljs-number">1</span> &amp;&amp; count_T == <span class="hljs-number">0</span> &amp;&amp; i == <span class="hljs-string">&#x27;A&#x27;</span>)<br>            ++count_MA;<br>        <span class="hljs-keyword">if</span>(count_P == <span class="hljs-number">1</span> &amp;&amp; count_T == <span class="hljs-number">1</span> &amp;&amp; i == <span class="hljs-string">&#x27;A&#x27;</span>)<br>            ++count_RA;<br>    &#125;<br>    <br><span class="hljs-comment">// 条件一、二、三的综合判断：</span><br>    <span class="hljs-keyword">if</span>(count_P != <span class="hljs-number">1</span> || count_T != <span class="hljs-number">1</span> || count_A == <span class="hljs-number">0</span> || count_MA == <span class="hljs-number">0</span>) <br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <br>    <span class="hljs-comment">// 条件二、三的综合判断：</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(count_LA * count_MA == count_RA) <br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <br>    <span class="hljs-comment">// 最后的else保证所有输入流都有返回值。若不写下面这一段，编译器会返回一个warning：</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    cin &gt;&gt; n;<br>    string str;<br>    cin.<span class="hljs-built_in">ignore</span>(); <span class="hljs-comment">// 为了让输入流忽略第一行数字后的换行符，避免后面getline结果为&#x27;\n&#x27;</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i != n; i++) &#123;<br>        <span class="hljs-built_in">getline</span>(cin, str);<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">PATjudgment</span>(str))<br>            cout &lt;&lt; <span class="hljs-string">&quot;YES&quot;</span>;<br>        <span class="hljs-keyword">else</span><br>            cout &lt;&lt; <span class="hljs-string">&quot;NO&quot;</span>;<br>        <span class="hljs-comment">// 控制输出总行数</span><br>        <span class="hljs-keyword">if</span>(i != n<span class="hljs-number">-1</span>)<br>            cout &lt;&lt; endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>刷题记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程题</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Hexo的个人网站搭建（踩坑）指南</title>
    <link href="/2021/04/09/%E5%9F%BA%E4%BA%8EHexo%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%EF%BC%88%E8%B8%A9%E5%9D%91%EF%BC%89%E6%8C%87%E5%8D%97/"/>
    <url>/2021/04/09/%E5%9F%BA%E4%BA%8EHexo%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%EF%BC%88%E8%B8%A9%E5%9D%91%EF%BC%89%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="基于Hexo的个人网站搭建（踩坑）指南"><a href="#基于Hexo的个人网站搭建（踩坑）指南" class="headerlink" title="基于Hexo的个人网站搭建（踩坑）指南"></a>基于Hexo的个人网站搭建（踩坑）指南</h1><blockquote><p>TIPS:</p><p>致本文的读者：</p><ul><li>本文章的操作教程是在 Windows 系统下进行的，在 Linux 或 MacOS下操作方式大同小异；</li><li>本指南中提到的：”<strong>站点配置</strong>“ 指的 Hexo 博客根目录下的 <code>_config.yml</code>，”<strong>主题配置</strong>“ 指的是 themes文件夹或其子文件夹下的<code>_config.yml</code> ，注意区分；</li><li>本指南中提到的 source目录都指的是博客目录下的 source文件夹，不推荐修改主题内 source 目录；</li><li>每次无论 <code>hexo g</code> 或 <code>hexo s</code>，都最好先使用 <code>hexo clean</code>；</li><li>页面结果以本地 <code>hexo s</code> 为准，部署后的异常大部分是缓存原因，在确认没有报错的情况下，等待若干时间后即可正常；</li><li>本文章持续更新，欢迎各位读者指摘。</li></ul></blockquote><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li>安装Git  </li><li>安装Node.js  </li><li>安装hexo  </li><li>使用GitHub创建个人仓库  </li><li>推送网站  </li><li>发布文章 </li><li>更换网站主题  </li><li>常见问题Q&amp;A</li><li>后记</li></ul><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>Git是一个开源的分布式版本控制系统，可以有效、高速地进行项目版本管理。简单来说可以通过Git来将你的博客文章同步到Github。</p><p>从Git官网下载安装 ( <a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a> ) ，之后可以通过<code>git --version</code> 来测试是否安装成功。安装成功后，右键点击Git Bash Here或者在菜单栏搜索Git Bash，将你的Git与GitHub账号进行绑定：</p><pre><code>git config --global user.name &quot;在此处输入你的GitHub用户名&quot;git config --global user.email &quot;在此处输入你的GitHub注册邮箱&quot; </code></pre><p>接着生成SSH密钥文件：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;在此处输入你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>保存文件的地址选项按照默认设定就好，直接按回车，记下生成.ssh文件夹的地址，然后在此文件夹中用文本编译器打开id_rsa.pub，将内容全部复制。</p><p>打开GitHub – Settings – SSH and GPG Keys</p><p>点击New SSH key</p><p>Title是SSH密钥标题，按个人喜好填写即可，在Key一栏将刚刚复制的内容粘贴上去，之后点击Add SSH key。</p><p>在Git命令行输入<code>ssh git@github.com</code>，若出现如下反馈：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">PTY allocation request failed <span class="hljs-keyword">on</span> channel <span class="hljs-number">0</span><br>Hi xxx! You&#x27;ve successfully authenticated, <span class="hljs-keyword">but</span> GitHub <span class="hljs-keyword">does</span> <span class="hljs-keyword">not</span> provide shell access.<br>Connection <span class="hljs-keyword">to</span> github.com closed.<br></code></pre></td></tr></table></figure><p>则说明GitHub公钥设置成功。</p><p>在这里我们设置GitHub密钥原因是，git使用https协议，每次推送都要输入密码，而采用ssh，将公钥放置在GitHub上，私钥放置在自己的电脑里之后可以省去这个过程。</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>Hexo是基于Node.js编写的，后续在网站搭建中需要用到Node.js中的npm指令。</p><p>Node.js下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a> </p><p>之后可以在cmd/PowerShell输入：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br>npm -v<br></code></pre></td></tr></table></figure><p>测试是否安装成功。</p><p>至此，Hexo安装的前置工作已经准备完毕。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>先创建一个文件夹（可以命名为hexoblog），存放hexo框架以及之后发布的网页文件。</p><p>之后的操作均在可以在hexo/cmd/Powershell中进行。</p><p>在hexoblog文件夹单击右键启动cmd/Powershell/Git Bash或者<code>cd</code>到hexoblog文件夹中。</p><p>用npm命令安装Hexo：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>按照惯例可以输入<code>hexo -v</code> 测试是否安装完成（顺便查看版本。</p><p>初始化Hexo：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span> blog<br></code></pre></td></tr></table></figure><p>此处blog可以用你喜欢的名字，这是一个存放网页配置文件的文件夹名，该目录下有</p><ul><li>_config.yml：网站的配置信息。</li><li>scaffolds：模板文件夹。新建文章时，Hexo 会根据 scaffold 来建立文件。</li><li>source：资源文件夹。这是存放用户资源的地方。</li><li>themes：主题文件夹。Hexo会根据主题来生成静态页面。</li><li>package.json：应用程序的信息。</li><li>node_modules：依赖包文件夹。</li></ul><p>接下来就可以查看我们的网页雏形了！</p><p>在blog文件夹中，按照顺序键入以下三道命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo new <span class="hljs-string">&quot;Hello World!&quot;</span> <span class="hljs-regexp">//</span>新建一篇文章，如果标题含空格的话，请用引号括起来<br>hexo g <span class="hljs-regexp">//</span>即hexo generate，生成静态文件<br>hexo s <span class="hljs-regexp">//</span>即hexo server，启动服务器，生成本地预览。<br></code></pre></td></tr></table></figure><p>在默认情况下，访问网站为：<code>http://localhost:4000/</code></p><p>打开浏览器输入上述地址，就可以看到我们写的第一篇博客啦！</p><h2 id="使用GitHub创建个人仓库"><a href="#使用GitHub创建个人仓库" class="headerlink" title="使用GitHub创建个人仓库"></a>使用GitHub创建个人仓库</h2><p>登录GitHub，在Repositories栏点击New创建新仓库，修改仓库名（Repository name）为: <code>xxx.github.io</code>，<strong>其中xxx为你注册GitHub的用户名</strong>。</p><p>这是一种以博客作为个人GitHub page主页的固定写法规范。</p><p>点击Create repository创建仓库。</p><p>*注意：建议不要选 Add a README file 项。</p><h2 id="推送网站"><a href="#推送网站" class="headerlink" title="推送网站"></a>推送网站</h2><p>在blog根目录中打开<strong>站点配置</strong>_config.yml文件，翻到最后进行修改：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">deploy:<br>type: git<br>repo: https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/xxx/</span>xxx.github.io.git <span class="hljs-regexp">//</span>GitHub仓库的完整路径,记得加上.git<br>branch: master<br></code></pre></td></tr></table></figure><p>*注意在冒号之后先加个空格。</p><p>安装部署的命令deploy-git：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>然后输入：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo clean<br>hexo g<br>hexo d <span class="hljs-regexp">//</span>即hexo deploy，部署网站。<br></code></pre></td></tr></table></figure><p>若出现</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">Branch <span class="hljs-string">&#x27;master&#x27;</span> <span class="hljs-builtin-name">set</span> up <span class="hljs-keyword">to</span> track remote branch <span class="hljs-string">&#x27;master&#x27;</span> <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;https://github.com/xxx/xxx.github.io.git&#x27;</span>.<br></code></pre></td></tr></table></figure><p>则说明部署成功。</p><p>之后，打开浏览器在地址栏输入放置个人网站仓库的路径，即<code>xxx.github.io</code></p><p>你会发现你的个人博客已经上线，可以被访问了！</p><h2 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h2><p>文章的存储地址是blog根目录下的source文件夹中的_post文件夹，在blog根目录下使用命令来新建一篇博客：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">hexo n <span class="hljs-string">&quot;博客名字&quot;</span> <span class="hljs-regexp">//</span>即hexo new，新建一篇博客<br></code></pre></td></tr></table></figure><p>新建的博客格式也是.md，可以使用Markdown编辑器打开。关于Markdown的使用方法在此处就不再详细讲解，感兴趣的话可以上网查阅相关使用文档。</p><h2 id="更换网站主题"><a href="#更换网站主题" class="headerlink" title="更换网站主题"></a>更换网站主题</h2><p>如果你不喜欢Hexo的默认主题，那么可以在Hexo官网的主题页、GitHub等地方寻找并更换主题。具体每个主题的更换方法请参考对应主题的操作文档。</p><p>将下载好的主题文件放入blog根目录下的themes文件夹中。打开站点配置文件，修改主题：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Extensions<br>## Plugins: https:<span class="hljs-comment">//hexo.io/plugins/</span><br>## Themes: https:<span class="hljs-comment">//hexo.io/themes/</span><br>theme: <span class="hljs-string">&quot;主题名称&quot;</span> <br></code></pre></td></tr></table></figure><p>之后可以执行<code>hexo g</code>, <code>hexo s</code> 再次加载网站查看效果。</p><h2 id="常见问题Q-amp-A"><a href="#常见问题Q-amp-A" class="headerlink" title="常见问题Q&amp;A"></a>常见问题Q&amp;A</h2><p><strong>1.出现”hexo:无法加载文件 C:\Users\Administrator\AppData\Roaming\npm\hexo.ps1，因为在此系统中禁止执行脚本“错误如何解决？</strong></p><p>答:</p><p>首先以管理员身份运行Powershell，输入：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">get</span>-ExecutionPolicy<br></code></pre></td></tr></table></figure><p>此时返回状态：Restricted，表明执行策略状态是禁止，接着输入：</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-built_in">set-ExecutionPolicy</span> <span class="hljs-string">RemoteSigned</span><br></code></pre></td></tr></table></figure><p>输入A/Y，回车即可。</p><p><strong>2.输入localhost:4000后博客的本地预览无法访问怎么办？</strong></p><p>答：</p><p>首先确认前置步骤的hexo的安装配置是否出错以及hexo是否能正常运行，如果都没问题就是不能访问，那有可能是电脑的端口被占用了，解决方案如下：</p><p>启动服务器时，输入如下命令：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hexo</span> s -p <span class="hljs-number">5000</span> <br></code></pre></td></tr></table></figure><p>*注意：端口号不一定是5000，可以在1024-5000中任选一个，如果再次出现问题，可以选择再次更换端口号，直到找到空闲端口。</p><p><strong>3.出现”Usage: hexo &lt; command &gt;“错误如何解决？</strong></p><p>答：</p><p>这是没有在blog根目录（即有众多具体文件的文件夹）下输入hexo命令的原因，此时只需在blog根目录下再执行一次命令即可。</p><p><strong>4.出现”OpenSSL SSL_read: Connection was reset, errno 10054“错误如何解决？</strong></p><p>答：</p><p>造成这种错误的原因一般是网络不稳定导致连接超时，可以先尝试再次执行。</p><p>若再次尝试之后仍然保持，可以在git下执行如下命令：</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs tcl">git config --<span class="hljs-keyword">global</span> <span class="hljs-keyword">http</span>.sslVerify <span class="hljs-string">&quot;false&quot;</span><br></code></pre></td></tr></table></figure><p>该命令解除了ssl验证，此时再次执行操作即可。</p><p><strong>5.出现”Logon failed, use ctrl+c to cancel basic credential prompt.“错误如何解决？</strong></p><p>答：</p><p>一般来说这种错误发生在执行<code>hexo d</code>后在GitHub弹窗登陆时，这种情况可能是因为git升级了，需要更新。</p><p>在git下输入：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git update-git-for-windows</span><br></code></pre></td></tr></table></figure><p>即可。</p><p>另，即使出现问题的错误也不要紧，因为之后可以在自动弹出的Git Shell中输入用户名和密码进行登陆。</p><p><strong>6.为什么我的部署的个人网站只显示个人网站仓库中的README内容，而不出现预设Hexo主题？</strong></p><p>答：</p><p>这是因为你在创建个人网站仓库是加入了README文件，导致仓库默认新建了一个名为main的默认branch，若运行<code>hexo d</code>后你会发现仓库中新建了一个名为master的branch。</p><p>解决方法是把master设为默认branch或者直接删除main。</p><p><strong>7.在浏览器预览网站时出现” <code>&#123;% extends ‘_layout.swig‘ %&#125; &#123;% import ‘_macro/post.swig‘ as post_template %&#125;</code>“错误如何解决？</strong></p><p>答：</p><p>这是因为hexo在5.0版本之后把swig删除了，手动安装即可：</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i hexo-renderer-swig<br></code></pre></td></tr></table></figure><p><strong>8.<code>hexo s</code> 与 <code>hexo d</code> 的区别是什么？</strong></p><p>答：</p><p><code>hexo s</code> 是启动服务器，将博客加载之本地服务器，可以通过localhost进行预览。</p><p><code>hexo d</code> 是部署网站，将博客内容推送到GitHub个人网站仓库中。</p><p>一般我们在编辑网站时，可以先执行<code>hexo s</code> 进行预览查看效果，确认无误之后再通过<code>hexo d</code> 部署网站。</p><p><strong>9.<code>hexo g</code> 后出现”Template render error”错误如何解决？</strong></p><p>答：</p><p>出现这种错误一般来说是你的文章中引入了诸如大括号<code>&#123;&#125;</code> 之类的特殊字符。请仔细检查文章中是否存在特殊字符，有的话建议通过Markdown中的代码区块包裹起来（或者用其他方法对特殊字符进行转义）。</p><p><strong>10.<code>hexo s</code> 后出现”TypeError: Cannot read property ‘utcOffset’ of null”错误如何解决？</strong></p><p>答：</p><p>将站点配置文件中开头的<code>timezone</code> 项修改为<code>Asia/Shanghai</code> 即可。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>到这里为止，个人网站的搭建工作就基本告一段落了，但是其实我们距离一个精美的网站还差很远。如果说这篇文章的内容是购置了一套新房子的话，那么个性化配置和文章写作可以说是房子的内在装修过程了。不过万事开头难，最重要的是先把网站搭建起来，先玩起来再说，至于怎么把博客做得精致，做得专业的问题慢慢再考虑也不迟，毕竟写博客是日积月累的过程，不太可能一口吃成胖子。</p><p>不过说实话，虽然网站的搭建从步骤看貌似非常简单，但是实际操作的过程其实还是需要耗费不少精力的。我在折腾的过程中都曾一度想过放弃（主要是坑踩太多了QAQ），去使用CSDN啊简书啊等现成的博客网站。不过想了一下，拥有自己的网站实在是太cool了，所以就一直坚持了下来，于是便克服了众多困难，也获得了相应的成就感。我觉得，这种经历是弥足珍贵的。</p><p>其实这篇文章还有很多我想补充的地方，不过由于时间关系，更多的内容日后再填补啦~</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
